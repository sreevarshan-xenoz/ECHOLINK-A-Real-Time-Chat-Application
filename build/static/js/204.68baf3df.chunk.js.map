{"version":3,"file":"static/js/204.68baf3df.chunk.js","mappings":"sFAAA,IAAIA,EAAM,CACT,iBAAkB,MAClB,oBAAqB,MACrB,uDAAwD,MACxD,0DAA2D,OAG5D,SAASC,EAAoBC,GAC5B,OAAOC,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAoBC,EAAEP,EAAKE,GAAM,CACpC,IAAIM,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,CAGA,OAAOF,EADEN,EAAIE,GACiB,GAEhC,CACAD,EAAoBU,KAAO,IAAOC,OAAOD,KAAKX,GAC9CC,EAAoBY,GAAK,KACzBC,EAAOC,QAAUd,C,iBCrBjB,IAAID,EAAM,CACT,kBAAmB,CAClB,OAED,qBAAsB,CACrB,OAED,uBAAwB,CACvB,OAED,0BAA2B,CAC1B,OAED,iBAAkB,CACjB,OAED,oBAAqB,CACpB,OAED,qBAAsB,CACrB,OAED,wBAAyB,CACxB,OAED,uBAAwB,CACvB,OAED,0BAA2B,CAC1B,OAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,4BAA6B,CAC5B,OAED,+BAAgC,CAC/B,OAED,qBAAsB,CACrB,OAED,wBAAyB,CACxB,OAED,4BAA6B,CAC5B,OAED,+BAAgC,CAC/B,OAED,oBAAqB,CACpB,OAED,uBAAwB,CACvB,OAED,0BAA2B,CAC1B,OAED,6BAA8B,CAC7B,OAED,sBAAuB,CACtB,OAED,yBAA0B,CACzB,OAED,sBAAuB,CACtB,OAED,yBAA0B,CACzB,OAED,6BAA8B,CAC7B,OAED,gCAAiC,CAChC,OAED,UAAW,CACV,OAED,aAAc,CACb,OAED,iBAAkB,CACjB,MAED,oBAAqB,CACpB,MAED,oBAAqB,CACpB,MAED,uBAAwB,CACvB,MAED,sBAAuB,CACtB,MACA,KAED,yBAA0B,CACzB,MACA,KAED,kCAAmC,CAClC,OAED,qCAAsC,CACrC,OAED,0BAA2B,CAC1B,OAED,6BAA8B,CAC7B,OAED,iCAAkC,CACjC,OAED,oCAAqC,CACpC,OAED,qCAAsC,CACrC,OAED,wCAAyC,CACxC,OAED,yCAA0C,CACzC,MACA,KAED,4CAA6C,CAC5C,MACA,KAED,8BAA+B,CAC9B,KAED,iCAAkC,CACjC,KAED,4BAA6B,CAC5B,OAED,+BAAgC,CAC/B,OAED,iBAAkB,CACjB,MACA,KAED,oBAAqB,CACpB,MACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,gCAAiC,CAChC,OAED,mCAAoC,CACnC,OAED,4DAA6D,CAC5D,OAED,+DAAgE,CAC/D,OAED,iEAAkE,CACjE,OAED,oEAAqE,CACpE,OAED,2DAA4D,CAC3D,OAED,8DAA+D,CAC9D,OAED,+DAAgE,CAC/D,OAED,kEAAmE,CAClE,OAED,iEAAkE,CACjE,OAED,oEAAqE,CACpE,OAED,6DAA8D,CAC7D,KACA,KAED,gEAAiE,CAChE,KACA,KAED,sEAAuE,CACtE,OAED,yEAA0E,CACzE,OAED,+DAAgE,CAC/D,OAED,kEAAmE,CAClE,OAED,sEAAuE,CACtE,OAED,yEAA0E,CACzE,OAED,8DAA+D,CAC9D,OAED,iEAAkE,CACjE,OAED,oEAAqE,CACpE,OAED,uEAAwE,CACvE,OAED,gEAAiE,CAChE,OAED,mEAAoE,CACnE,OAED,gEAAiE,CAChE,OAED,mEAAoE,CACnE,OAED,uEAAwE,CACvE,OAED,0EAA2E,CAC1E,OAED,oDAAqD,CACpD,OAED,uDAAwD,CACvD,OAED,2DAA4D,CAC3D,MAED,8DAA+D,CAC9D,MAED,8DAA+D,CAC9D,MAED,iEAAkE,CACjE,MAED,gEAAiE,CAChE,MACA,KAED,mEAAoE,CACnE,MACA,KAED,4EAA6E,CAC5E,OAED,+EAAgF,CAC/E,OAED,oEAAqE,CACpE,OAED,uEAAwE,CACvE,OAED,2EAA4E,CAC3E,OAED,8EAA+E,CAC9E,OAED,+EAAgF,CAC/E,OAED,kFAAmF,CAClF,OAED,mFAAoF,CACnF,MACA,KAED,sFAAuF,CACtF,MACA,KAED,wEAAyE,CACxE,KAED,2EAA4E,CAC3E,KAED,sEAAuE,CACtE,OAED,yEAA0E,CACzE,OAED,2DAA4D,CAC3D,MACA,KAED,8DAA+D,CAC9D,MACA,KAED,kEAAmE,CA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","sources":["../node_modules/monaco-editor/esm/vs/base/common/worker|lazy|/^.*$/|groupOptions: {}|namespace object","../node_modules/monaco-editor/esm/vs/editor/common/services|lazy|/^.*$/|groupOptions: {}|namespace object","components/CollaborativeCodeEditor.js","components/RepoAnalyticsDashboard.js","components/GitHubIntegration.js","services/github-service.js"],"sourcesContent":["var map = {\n\t\"./simpleWorker\": 88964,\n\t\"./simpleWorker.js\": 88964,\n\t\"monaco-editor/esm/vs/base/common/worker/simpleWorker\": 88964,\n\t\"monaco-editor/esm/vs/base/common/worker/simpleWorker.js\": 88964\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(() => {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 5890;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./editorBaseApi\": [\n\t\t92212\n\t],\n\t\"./editorBaseApi.js\": [\n\t\t92212\n\t],\n\t\"./editorSimpleWorker\": [\n\t\t10104\n\t],\n\t\"./editorSimpleWorker.js\": [\n\t\t10104\n\t],\n\t\"./editorWorker\": [\n\t\t84225\n\t],\n\t\"./editorWorker.js\": [\n\t\t84225\n\t],\n\t\"./editorWorkerHost\": [\n\t\t49487\n\t],\n\t\"./editorWorkerHost.js\": [\n\t\t49487\n\t],\n\t\"./findSectionHeaders\": [\n\t\t70730\n\t],\n\t\"./findSectionHeaders.js\": [\n\t\t70730\n\t],\n\t\"./getIconClasses\": [\n\t\t9320,\n\t\t320\n\t],\n\t\"./getIconClasses.js\": [\n\t\t9320,\n\t\t320\n\t],\n\t\"./languageFeatureDebounce\": [\n\t\t78787\n\t],\n\t\"./languageFeatureDebounce.js\": [\n\t\t78787\n\t],\n\t\"./languageFeatures\": [\n\t\t18715\n\t],\n\t\"./languageFeatures.js\": [\n\t\t18715\n\t],\n\t\"./languageFeaturesService\": [\n\t\t24836\n\t],\n\t\"./languageFeaturesService.js\": [\n\t\t24836\n\t],\n\t\"./languageService\": [\n\t\t75297\n\t],\n\t\"./languageService.js\": [\n\t\t75297\n\t],\n\t\"./languagesAssociations\": [\n\t\t41011\n\t],\n\t\"./languagesAssociations.js\": [\n\t\t41011\n\t],\n\t\"./languagesRegistry\": [\n\t\t27780\n\t],\n\t\"./languagesRegistry.js\": [\n\t\t27780\n\t],\n\t\"./markerDecorations\": [\n\t\t13473\n\t],\n\t\"./markerDecorations.js\": [\n\t\t13473\n\t],\n\t\"./markerDecorationsService\": [\n\t\t61905\n\t],\n\t\"./markerDecorationsService.js\": [\n\t\t61905\n\t],\n\t\"./model\": [\n\t\t22597\n\t],\n\t\"./model.js\": [\n\t\t22597\n\t],\n\t\"./modelService\": [\n\t\t3538\n\t],\n\t\"./modelService.js\": [\n\t\t3538\n\t],\n\t\"./resolverService\": [\n\t\t3537\n\t],\n\t\"./resolverService.js\": [\n\t\t3537\n\t],\n\t\"./semanticTokensDto\": [\n\t\t31351,\n\t\t351\n\t],\n\t\"./semanticTokensDto.js\": [\n\t\t31351,\n\t\t351\n\t],\n\t\"./semanticTokensProviderStyling\": [\n\t\t20452\n\t],\n\t\"./semanticTokensProviderStyling.js\": [\n\t\t20452\n\t],\n\t\"./semanticTokensStyling\": [\n\t\t63120\n\t],\n\t\"./semanticTokensStyling.js\": [\n\t\t63120\n\t],\n\t\"./semanticTokensStylingService\": [\n\t\t47129\n\t],\n\t\"./semanticTokensStylingService.js\": [\n\t\t47129\n\t],\n\t\"./textModelSync/textModelSync.impl\": [\n\t\t75212\n\t],\n\t\"./textModelSync/textModelSync.impl.js\": [\n\t\t75212\n\t],\n\t\"./textModelSync/textModelSync.protocol\": [\n\t\t79421,\n\t\t421\n\t],\n\t\"./textModelSync/textModelSync.protocol.js\": [\n\t\t79421,\n\t\t421\n\t],\n\t\"./textResourceConfiguration\": [\n\t\t683\n\t],\n\t\"./textResourceConfiguration.js\": [\n\t\t683\n\t],\n\t\"./treeSitterParserService\": [\n\t\t24051\n\t],\n\t\"./treeSitterParserService.js\": [\n\t\t24051\n\t],\n\t\"./treeViewsDnd\": [\n\t\t37542,\n\t\t542\n\t],\n\t\"./treeViewsDnd.js\": [\n\t\t37542,\n\t\t542\n\t],\n\t\"./treeViewsDndService\": [\n\t\t6443,\n\t\t443\n\t],\n\t\"./treeViewsDndService.js\": [\n\t\t6443,\n\t\t443\n\t],\n\t\"./unicodeTextModelHighlighter\": [\n\t\t43072\n\t],\n\t\"./unicodeTextModelHighlighter.js\": [\n\t\t43072\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorBaseApi\": [\n\t\t92212\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorBaseApi.js\": [\n\t\t92212\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorSimpleWorker\": [\n\t\t10104\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\": [\n\t\t10104\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorWorker\": [\n\t\t84225\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorWorker.js\": [\n\t\t84225\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorWorkerHost\": [\n\t\t49487\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js\": [\n\t\t49487\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/findSectionHeaders\": [\n\t\t70730\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js\": [\n\t\t70730\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/getIconClasses\": [\n\t\t9320,\n\t\t320\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/getIconClasses.js\": [\n\t\t9320,\n\t\t320\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce\": [\n\t\t78787\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js\": [\n\t\t78787\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeatures\": [\n\t\t18715\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeatures.js\": [\n\t\t18715\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeaturesService\": [\n\t\t24836\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js\": [\n\t\t24836\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageService\": [\n\t\t75297\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageService.js\": [\n\t\t75297\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languagesAssociations\": [\n\t\t41011\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languagesAssociations.js\": [\n\t\t41011\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languagesRegistry\": [\n\t\t27780\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languagesRegistry.js\": [\n\t\t27780\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/markerDecorations\": [\n\t\t13473\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/markerDecorations.js\": [\n\t\t13473\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/markerDecorationsService\": [\n\t\t61905\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js\": [\n\t\t61905\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/model\": [\n\t\t22597\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/model.js\": [\n\t\t22597\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/modelService\": [\n\t\t3538\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/modelService.js\": [\n\t\t3538\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/resolverService\": [\n\t\t3537\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/resolverService.js\": [\n\t\t3537\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensDto\": [\n\t\t31351,\n\t\t351\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js\": [\n\t\t31351,\n\t\t351\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling\": [\n\t\t20452\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js\": [\n\t\t20452\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensStyling\": [\n\t\t63120\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js\": [\n\t\t63120\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService\": [\n\t\t47129\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js\": [\n\t\t47129\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl\": [\n\t\t75212\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js\": [\n\t\t75212\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.protocol\": [\n\t\t79421,\n\t\t421\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.protocol.js\": [\n\t\t79421,\n\t\t421\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textResourceConfiguration\": [\n\t\t683\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js\": [\n\t\t683\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeSitterParserService\": [\n\t\t24051\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js\": [\n\t\t24051\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeViewsDnd\": [\n\t\t37542,\n\t\t542\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js\": [\n\t\t37542,\n\t\t542\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeViewsDndService\": [\n\t\t6443,\n\t\t443\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js\": [\n\t\t6443,\n\t\t443\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter\": [\n\t\t43072\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js\": [\n\t\t43072\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9204;\nmodule.exports = webpackAsyncContext;","import React, { useEffect, useRef, useState } from 'react';\r\nimport Editor from '@monaco-editor/react';\r\nimport * as Y from 'yjs';\r\nimport { WebsocketProvider } from 'y-websocket';\r\nimport { MonacoBinding } from 'y-monaco';\r\nimport './CollaborativeCodeEditor.css';\r\n\r\nconst CollaborativeCodeEditor = ({ \r\n  roomId, \r\n  language = 'javascript', \r\n  initialContent = '',\r\n  readOnly = false,\r\n  onContentChange = () => {}\r\n}) => {\r\n  const editorRef = useRef(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    if (!editorRef.current) return;\r\n    \r\n    // Create a Yjs document\r\n    const ydoc = new Y.Doc();\r\n    \r\n    // Connect to WebSocket server\r\n    const provider = new WebsocketProvider(\r\n      'ws://localhost:1234', \r\n      `echolink-collab-${roomId}`, \r\n      ydoc\r\n    );\r\n    \r\n    provider.on('status', event => {\r\n      setConnected(event.status === 'connected');\r\n    });\r\n    \r\n    // Get the shared text\r\n    const ytext = ydoc.getText('monaco');\r\n    \r\n    // If there's initial content and the document is empty, set it\r\n    if (initialContent && ytext.toString() === '') {\r\n      ytext.insert(0, initialContent);\r\n    }\r\n    \r\n    // Bind Monaco editor to Yjs\r\n    const binding = new MonacoBinding(\r\n      ytext, \r\n      editorRef.current.getModel(), \r\n      new Set([editorRef.current]), \r\n      provider.awareness\r\n    );\r\n    \r\n    // Set up awareness (cursor presence)\r\n    provider.awareness.setLocalStateField('user', {\r\n      name: localStorage.getItem('username') || 'Anonymous',\r\n      color: '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n    });\r\n    \r\n    // Update users list when awareness changes\r\n    const updateUsers = () => {\r\n      const states = Array.from(provider.awareness.getStates().values());\r\n      const userList = states\r\n        .filter(state => state.user)\r\n        .map(state => state.user);\r\n      setUsers(userList);\r\n    };\r\n    \r\n    provider.awareness.on('change', updateUsers);\r\n    updateUsers();\r\n    \r\n    // Set up content change handler\r\n    const contentChangeHandler = () => {\r\n      onContentChange(ytext.toString());\r\n    };\r\n    ytext.observe(contentChangeHandler);\r\n    \r\n    return () => {\r\n      // Clean up\r\n      ytext.unobserve(contentChangeHandler);\r\n      provider.awareness.off('change', updateUsers);\r\n      provider.disconnect();\r\n      ydoc.destroy();\r\n    };\r\n  }, [roomId, initialContent, onContentChange]);\r\n  \r\n  function handleEditorDidMount(editor) {\r\n    editorRef.current = editor;\r\n    editor.updateOptions({ readOnly });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"collaborative-editor-container\">\r\n      <div className=\"editor-header\">\r\n        <div className=\"connection-status\">\r\n          <span className={`status-indicator ${connected ? 'connected' : 'disconnected'}`}></span>\r\n          <span>{connected ? 'Connected' : 'Disconnected'}</span>\r\n        </div>\r\n        <div className=\"active-users\">\r\n          {users.map((user, index) => (\r\n            <div \r\n              key={index} \r\n              className=\"user-indicator\" \r\n              style={{ backgroundColor: user.color }}\r\n              title={user.name}\r\n            >\r\n              {user.name.charAt(0).toUpperCase()}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Editor\r\n        height=\"70vh\"\r\n        language={language}\r\n        defaultValue={initialContent}\r\n        onMount={handleEditorDidMount}\r\n        options={{\r\n          minimap: { enabled: false },\r\n          automaticLayout: true\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollaborativeCodeEditor;","import React, { useState, useEffect } from 'react';\r\nimport { githubService } from '../services/github-service';\r\nimport './RepoAnalyticsDashboard.css';\r\n\r\nconst RepoAnalyticsDashboard = ({ repo }) => {\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    async function fetchStats() {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        const commitActivity = await githubService.getCommitActivity(repo.owner.login, repo.name);\r\n        const contributorStats = await githubService.getContributorStats(repo.owner.login, repo.name);\r\n        \r\n        setStats({ commitActivity, contributorStats });\r\n      } catch (err) {\r\n        console.error('Error fetching repository statistics:', err);\r\n        setError('Failed to load repository statistics');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    \r\n    if (repo) {\r\n      fetchStats();\r\n    }\r\n  }, [repo]);\r\n  \r\n  if (!repo) return null;\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading-indicator\">Loading repository statistics...</div>;\r\n  }\r\n  \r\n  if (error) {\r\n    return <div className=\"error-message\">{error}</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"repo-analytics-dashboard\">\r\n      <h3>Repository Analytics</h3>\r\n      \r\n      <div className=\"analytics-section\">\r\n        <h4>Commit Activity</h4>\r\n        {stats?.commitActivity ? (\r\n          <div className=\"commit-activity-chart\">\r\n            {/* Simple visualization of commit activity */}\r\n            <div className=\"chart-container\">\r\n              {stats.commitActivity.slice(0, 12).map((week, index) => (\r\n                <div key={index} className=\"chart-bar-container\">\r\n                  <div \r\n                    className=\"chart-bar\" \r\n                    style={{ height: `${Math.min(100, week.total * 5)}px` }}\r\n                    title={`${week.total} commits`}\r\n                  ></div>\r\n                  <div className=\"chart-label\">{index + 1}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"chart-legend\">Weeks (most recent 12)</div>\r\n          </div>\r\n        ) : (\r\n          <p>No commit activity data available</p>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"analytics-section\">\r\n        <h4>Contributors</h4>\r\n        {stats?.contributorStats && stats.contributorStats.length > 0 ? (\r\n          <div className=\"contributors-list\">\r\n            {stats.contributorStats\r\n              .sort((a, b) => b.total - a.total)\r\n              .slice(0, 5)\r\n              .map((contributor, index) => (\r\n                <div key={index} className=\"contributor-item\">\r\n                  <img \r\n                    src={contributor.author.avatar_url} \r\n                    alt={contributor.author.login}\r\n                    className=\"contributor-avatar\"\r\n                  />\r\n                  <div className=\"contributor-info\">\r\n                    <div className=\"contributor-name\">{contributor.author.login}</div>\r\n                    <div className=\"contributor-commits\">{contributor.total} commits</div>\r\n                  </div>\r\n                  <div \r\n                    className=\"contributor-bar\" \r\n                    style={{ \r\n                      width: `${Math.min(100, (contributor.total / stats.contributorStats[0].total) * 100)}%` \r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <p>No contributor data available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepoAnalyticsDashboard;","import React, { useState, useEffect } from 'react';\r\nimport { githubService } from '../services/github-service';\r\nimport Editor from '@monaco-editor/react';\r\nimport CollaborativeCodeEditor from './CollaborativeCodeEditor';\r\nimport RepoAnalyticsDashboard from './RepoAnalyticsDashboard';\r\nimport './GitHubIntegration.css';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst GitHubIntegration = () => {\r\n    const { owner, repo } = useParams();\r\n    const navigate = useNavigate();\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [userData, setUserData] = useState(null);\r\n    const [repositories, setRepositories] = useState([]);\r\n    const [selectedRepo, setSelectedRepo] = useState(null);\r\n    const [repoContent, setRepoContent] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [fileContent, setFileContent] = useState('');\r\n    const [language, setLanguage] = useState('javascript');\r\n    const [notification, setNotification] = useState({ show: false, message: '', type: '' });\r\n    const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n    const [currentPath, setCurrentPath] = useState('');\r\n    const [collaborativeMode, setCollaborativeMode] = useState(false);\r\n    const [showAnalytics, setShowAnalytics] = useState(false);\r\n\r\n    useEffect(() => {\r\n        initializeGitHub();\r\n    }, [owner, repo]);\r\n\r\n    const initializeGitHub = async () => {\r\n        try {\r\n            setLoading(true);\r\n            \r\n            // Check if GitHub is configured\r\n            if (!githubService.isConfigured) {\r\n                showNotification('GitHub integration is not configured. Please set up your GitHub credentials in the .env file.', 'error');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            \r\n            const initialized = await githubService.initialize();\r\n            setIsConnected(initialized);\r\n            \r\n            if (initialized) {\r\n                const userData = githubService.getUserData();\r\n                setUserData(userData);\r\n                \r\n                // If we have owner and repo params, load that specific repository\r\n                if (owner && repo) {\r\n                    await loadSpecificRepository(owner, repo);\r\n                } else {\r\n                    await loadRepositories();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error initializing GitHub:', error);\r\n            showNotification('Failed to initialize GitHub integration', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const connectGitHub = () => {\r\n        try {\r\n            const authUrl = githubService.getAuthUrl();\r\n            console.log('Redirecting to GitHub auth URL:', authUrl);\r\n            window.location.href = authUrl;\r\n        } catch (error) {\r\n            console.error('Error initiating GitHub connection:', error);\r\n            showNotification('Failed to connect to GitHub: ' + error.message, 'error');\r\n        }\r\n    };\r\n\r\n    const disconnectGitHub = async () => {\r\n        try {\r\n            setLoading(true);\r\n            await githubService.disconnect();\r\n            setIsConnected(false);\r\n            setUserData(null);\r\n            setRepositories([]);\r\n            setSelectedRepo(null);\r\n            setRepoContent([]);\r\n            setSelectedFile(null);\r\n            setFileContent('');\r\n            showNotification('GitHub account disconnected successfully', 'success');\r\n        } catch (error) {\r\n            console.error('Error disconnecting GitHub account:', error);\r\n            showNotification('Failed to disconnect GitHub account', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const loadRepositories = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const repos = await githubService.getRepositories();\r\n            setRepositories(repos);\r\n        } catch (error) {\r\n            console.error('Error loading repositories:', error);\r\n            showNotification('Failed to load repositories', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const loadSpecificRepository = async (ownerParam, repoParam) => {\r\n        try {\r\n            setLoading(true);\r\n            const repos = await githubService.getRepositories();\r\n            \r\n            // Find the specific repository in the user's repositories\r\n            const targetRepo = repos.find(r => \r\n                r.owner.login.toLowerCase() === ownerParam.toLowerCase() && \r\n                r.name.toLowerCase() === repoParam.toLowerCase()\r\n            );\r\n            \r\n            if (targetRepo) {\r\n                setSelectedRepo(targetRepo);\r\n                setBreadcrumbs([{ name: targetRepo.name, path: '' }]);\r\n                const content = await githubService.getRepositoryContent(targetRepo.owner.login, targetRepo.name);\r\n                setRepoContent(content);\r\n                setSelectedFile(null);\r\n                setFileContent('');\r\n                setCurrentPath('');\r\n            } else {\r\n                // If the repo isn't in user's repos, try to fetch it directly\r\n                try {\r\n                    const content = await githubService.getRepositoryContent(ownerParam, repoParam);\r\n                    if (content) {\r\n                        // Create a minimal repo object\r\n                        const repoObject = {\r\n                            name: repoParam,\r\n                            owner: { login: ownerParam },\r\n                            id: `${ownerParam}/${repoParam}`\r\n                        };\r\n                        setSelectedRepo(repoObject);\r\n                        setBreadcrumbs([{ name: repoParam, path: '' }]);\r\n                        setRepoContent(content);\r\n                    }\r\n                } catch (repoError) {\r\n                    console.error('Error loading specific repository:', repoError);\r\n                    showNotification('Repository not found or access denied', 'error');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading repositories:', error);\r\n            showNotification('Failed to load repository information', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const selectRepository = async (repo) => {\r\n        try {\r\n            setLoading(true);\r\n            setSelectedRepo(repo);\r\n            setCurrentPath('');\r\n            setBreadcrumbs([{ name: repo.name, path: '' }]);\r\n            const content = await githubService.getRepositoryContent(repo.owner.login, repo.name);\r\n            setRepoContent(content);\r\n            setSelectedFile(null);\r\n            setFileContent('');\r\n            setCollaborativeMode(false);\r\n            setShowAnalytics(false);\r\n        } catch (error) {\r\n            console.error('Error loading repository content:', error);\r\n            showNotification('Failed to load repository content', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const navigateDirectory = async (item) => {\r\n        if (!selectedRepo) return;\r\n        \r\n        try {\r\n            setLoading(true);\r\n            const newPath = currentPath ? `${currentPath}/${item.name}` : item.name;\r\n            setCurrentPath(newPath);\r\n            \r\n            // Update breadcrumbs\r\n            const newBreadcrumbs = [...breadcrumbs];\r\n            newBreadcrumbs.push({ name: item.name, path: newPath });\r\n            setBreadcrumbs(newBreadcrumbs);\r\n            \r\n            const content = await githubService.getRepositoryContent(\r\n                selectedRepo.owner.login,\r\n                selectedRepo.name,\r\n                newPath\r\n            );\r\n            setRepoContent(content);\r\n            setSelectedFile(null);\r\n            setFileContent('');\r\n        } catch (error) {\r\n            console.error('Error navigating directory:', error);\r\n            showNotification('Failed to navigate directory', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const navigateBreadcrumb = async (breadcrumb, index) => {\r\n        if (!selectedRepo) return;\r\n        \r\n        try {\r\n            setLoading(true);\r\n            setCurrentPath(breadcrumb.path);\r\n            \r\n            // Update breadcrumbs\r\n            const newBreadcrumbs = breadcrumbs.slice(0, index + 1);\r\n            setBreadcrumbs(newBreadcrumbs);\r\n            \r\n            const content = await githubService.getRepositoryContent(\r\n                selectedRepo.owner.login,\r\n                selectedRepo.name,\r\n                breadcrumb.path\r\n            );\r\n            setRepoContent(content);\r\n            setSelectedFile(null);\r\n            setFileContent('');\r\n        } catch (error) {\r\n            console.error('Error navigating breadcrumb:', error);\r\n            showNotification('Failed to navigate breadcrumb', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const selectFile = async (file) => {\r\n        try {\r\n            setLoading(true);\r\n            setSelectedFile(file);\r\n            \r\n            // Determine language from file extension\r\n            const extension = file.name.split('.').pop().toLowerCase();\r\n            const languageMap = {\r\n                'js': 'javascript',\r\n                'jsx': 'javascript',\r\n                'ts': 'typescript',\r\n                'tsx': 'typescript',\r\n                'py': 'python',\r\n                'java': 'java',\r\n                'html': 'html',\r\n                'css': 'css',\r\n                'json': 'json',\r\n                'md': 'markdown',\r\n                'php': 'php',\r\n                'rb': 'ruby',\r\n                'go': 'go',\r\n                'c': 'c',\r\n                'cpp': 'cpp',\r\n                'cs': 'csharp',\r\n                'swift': 'swift',\r\n                'kt': 'kotlin',\r\n                'rs': 'rust'\r\n            };\r\n            setLanguage(languageMap[extension] || 'plaintext');\r\n            \r\n            const content = await githubService.getFileContent(file.download_url);\r\n            setFileContent(content);\r\n        } catch (error) {\r\n            console.error('Error loading file content:', error);\r\n            showNotification('Failed to load file content', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const saveFile = async () => {\r\n        if (!selectedFile || !selectedRepo) return;\r\n        \r\n        try {\r\n            setLoading(true);\r\n            const message = `Update ${selectedFile.name} via ECHOLINK`;\r\n            await githubService.updateFile(\r\n                selectedRepo.owner.login,\r\n                selectedRepo.name,\r\n                selectedFile.path,\r\n                fileContent,\r\n                message,\r\n                selectedFile.sha\r\n            );\r\n            showNotification('File saved successfully', 'success');\r\n            \r\n            // Refresh file to get new SHA\r\n            await selectFile(selectedFile);\r\n        } catch (error) {\r\n            console.error('Error saving file:', error);\r\n            showNotification('Failed to save file', 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleEditorChange = (value) => {\r\n        setFileContent(value);\r\n    };\r\n\r\n    const showNotification = (message, type) => {\r\n        setNotification({ show: true, message, type });\r\n        setTimeout(() => setNotification({ show: false, message: '', type: '' }), 3000);\r\n    };\r\n\r\n    // Debug function to help diagnose GitHub connection issues\r\n    const debugGitHubConnection = async () => {\r\n        try {\r\n            setLoading(true);\r\n            showNotification('Running GitHub connection diagnostics...', 'info');\r\n            \r\n            // Check if we have a GitHub code in the URL\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            const code = urlParams.get('code');\r\n            const state = urlParams.get('state');\r\n            \r\n            console.log('GitHub Integration Debug:');\r\n            console.log('- URL has code param:', !!code);\r\n            console.log('- URL has state param:', !!state);\r\n            console.log('- GitHub service configured:', githubService.isConfigured);\r\n            console.log('- Client ID available:', !!process.env.REACT_APP_GITHUB_CLIENT_ID);\r\n            console.log('- Redirect URI:', githubService.redirectUri);\r\n            \r\n            // Try to initialize without relying on URL params\r\n            const initialized = await githubService.initialize();\r\n            console.log('- Service initialized:', initialized);\r\n            \r\n            showNotification('Diagnostic data logged to console', 'info');\r\n        } catch (error) {\r\n            console.error('Debug error:', error);\r\n            showNotification('Error during diagnostics: ' + error.message, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading && !isConnected) {\r\n        return (\r\n            <div className=\"github-loading\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <p>Loading GitHub integration...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"github-integration-container\">\r\n            <div className=\"github-header\">\r\n                <div className=\"github-navigation\">\r\n                    <Link to=\"/github\" className=\"github-back-link\">\r\n                        ← Back to GitHub Home\r\n                    </Link>\r\n                </div>\r\n                <h2>Repository Browser</h2>\r\n                {selectedRepo && (\r\n                    <div className=\"selected-repo-info\">\r\n                        <h3>\r\n                            <span className=\"repo-owner\">{selectedRepo.owner.login}</span>\r\n                            <span className=\"repo-separator\">/</span>\r\n                            <span className=\"repo-name\">{selectedRepo.name}</span>\r\n                        </h3>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {!isConnected ? (\r\n                <div className=\"github-connect-section\">\r\n                    <div className=\"github-connect-card\">\r\n                        <div className=\"github-logo\">\r\n                            <svg height=\"68\" viewBox=\"0 0 16 16\" width=\"68\">\r\n                                <path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>Connect to GitHub</h3>\r\n                        <p>Link your GitHub account to access your repositories and collaborate on code directly from ECHOLINK.</p>\r\n                        <button className=\"github-connect-button\" onClick={connectGitHub}>\r\n                            Connect GitHub Account\r\n                        </button>\r\n                        <button className=\"github-debug-button\" onClick={debugGitHubConnection}>\r\n                            Diagnose Connection Issues\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"github-features\">\r\n                        <div className=\"feature-item\">\r\n                            <div className=\"feature-icon\">📁</div>\r\n                            <h4>Access Repositories</h4>\r\n                            <p>Browse and access all your GitHub repositories</p>\r\n                        </div>\r\n                        <div className=\"feature-item\">\r\n                            <div className=\"feature-icon\">📝</div>\r\n                            <h4>Edit Code</h4>\r\n                            <p>View and edit code with syntax highlighting</p>\r\n                        </div>\r\n                        <div className=\"feature-item\">\r\n                            <div className=\"feature-icon\">🔄</div>\r\n                            <h4>Sync Changes</h4>\r\n                            <p>Commit changes directly to your repositories</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"github-connected-section\">\r\n                    <div className=\"github-user-info\">\r\n                        {userData && (\r\n                            <>\r\n                                <img src={userData.avatar_url} alt=\"GitHub Avatar\" className=\"github-avatar\" />\r\n                                <div className=\"github-user-details\">\r\n                                    <h3>{userData.name || userData.login}</h3>\r\n                                    <p>@{userData.login}</p>\r\n                                    <button className=\"github-disconnect-button\" onClick={disconnectGitHub}>\r\n                                        Disconnect\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"github-workspace\">\r\n                        <div className=\"github-sidebar\">\r\n                            <h3>Your Repositories</h3>\r\n                            <div className=\"repo-list\">\r\n                                {repositories.length > 0 ? (\r\n                                    repositories.map(repo => (\r\n                                        <div \r\n                                            key={repo.id} \r\n                                            className={`repo-item ${selectedRepo && selectedRepo.id === repo.id ? 'selected' : ''}`}\r\n                                            onClick={() => selectRepository(repo)}\r\n                                        >\r\n                                            <div className=\"repo-icon\">📁</div>\r\n                                            <div className=\"repo-details\">\r\n                                                <h4>{repo.name}</h4>\r\n                                                <p>{repo.description || 'No description'}</p>\r\n                                                <div className=\"repo-meta\">\r\n                                                    <span>⭐ {repo.stargazers_count}</span>\r\n                                                    <span>🍴 {repo.forks_count}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                ) : (\r\n                                    <p className=\"no-repos-message\">No repositories found</p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"github-content\">\r\n                            {selectedRepo ? (\r\n                                <>\r\n                                    <div className=\"repo-header\">\r\n                                        <h3>{selectedRepo.name}</h3>\r\n                                        <div className=\"repo-actions\">\r\n                                            <button \r\n                                                className={`analytics-toggle ${showAnalytics ? 'active' : ''}`}\r\n                                                onClick={() => setShowAnalytics(!showAnalytics)}\r\n                                            >\r\n                                                {showAnalytics ? 'Hide Analytics' : 'Show Analytics'}\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"breadcrumbs\">\r\n                                            {breadcrumbs.map((breadcrumb, index) => (\r\n                                                <span key={index}>\r\n                                                    <span \r\n                                                        className=\"breadcrumb-item\" \r\n                                                        onClick={() => navigateBreadcrumb(breadcrumb, index)}\r\n                                                    >\r\n                                                        {breadcrumb.name}\r\n                                                    </span>\r\n                                                    {index < breadcrumbs.length - 1 && <span className=\"breadcrumb-separator\">/</span>}\r\n                                                </span>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {selectedFile ? (\r\n                                        <div className=\"file-editor\">\r\n                                            <div className=\"file-editor-header\">\r\n                                                <h4>{selectedFile.name}</h4>\r\n                                                <button className=\"save-file-button\" onClick={saveFile}>\r\n                                                    Save Changes\r\n                                                </button>\r\n                                                <button \r\n                                                    className={`mode-toggle ${collaborativeMode ? 'active' : ''}`}\r\n                                                    onClick={() => setCollaborativeMode(!collaborativeMode)}\r\n                                                >\r\n                                                    {collaborativeMode ? 'Collaborative Mode' : 'Solo Mode'}\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"monaco-editor-container\">\r\n                                                {collaborativeMode ? (\r\n                                                    <CollaborativeCodeEditor\r\n                                                        roomId={`${selectedRepo.owner.login}-${selectedRepo.name}-${currentPath}-${selectedFile.name}`}\r\n                                                        language={language}\r\n                                                        initialContent={fileContent}\r\n                                                        onContentChange={handleEditorChange}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <Editor\r\n                                                        height=\"500px\"\r\n                                                        language={language}\r\n                                                        value={fileContent}\r\n                                                        onChange={handleEditorChange}\r\n                                                        theme=\"vs-dark\"\r\n                                                        options={{\r\n                                                            minimap: { enabled: true },\r\n                                                            scrollBeyondLastLine: false,\r\n                                                            fontSize: 14,\r\n                                                            wordWrap: 'on'\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"repo-browser\">\r\n                                            {showAnalytics ? (\r\n                                                <RepoAnalyticsDashboard repo={selectedRepo} />\r\n                                            ) : repoContent.length > 0 ? (\r\n                                                <div className=\"repo-items\">\r\n                                                    {repoContent\r\n                                                        .sort((a, b) => {\r\n                                                            // Directories first, then files\r\n                                                            if (a.type === 'dir' && b.type !== 'dir') return -1;\r\n                                                            if (a.type !== 'dir' && b.type === 'dir') return 1;\r\n                                                            return a.name.localeCompare(b.name);\r\n                                                        })\r\n                                                        .map(item => (\r\n                                                            <div \r\n                                                                key={item.sha} \r\n                                                                className={`repo-browser-item ${item.type}`}\r\n                                                                onClick={() => item.type === 'dir' ? navigateDirectory(item) : selectFile(item)}\r\n                                                            >\r\n                                                                <div className=\"item-icon\">\r\n                                                                    {item.type === 'dir' ? '📁' : '📄'}\r\n                                                                </div>\r\n                                                                <div className=\"item-name\">{item.name}</div>\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div className=\"empty-repo-message\">\r\n                                                    <p>This repository is empty</p>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"select-repo-message\">\r\n                                    <div className=\"message-icon\">📁</div>\r\n                                    <h3>Select a Repository</h3>\r\n                                    <p>Choose a repository from the sidebar to view its contents</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {notification.show && (\r\n                <div className={`github-notification ${notification.type}`}>\r\n                    {notification.message}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GitHubIntegration;","// GitHub API integration service\nimport { supabase } from './supabase-service';\n\nclass GitHubService {\n    constructor() {\n        this.clientId = process.env.REACT_APP_GITHUB_CLIENT_ID || '';\n        this.redirectUri = `${window.location.origin}/dashboard`;\n        console.log('GitHub redirect URI:', this.redirectUri);\n        this.scope = 'repo user';\n        this.accessToken = null;\n        this.userData = null;\n        this.isConfigured = !!this.clientId;\n    }\n\n    /**\n     * Initialize the GitHub service with an existing token if available\n     */\n    async initialize() {\n        try {\n            // Check if GitHub integration is properly configured\n            if (!this.isConfigured) {\n                console.error('GitHub integration is not configured. Please set REACT_APP_GITHUB_CLIENT_ID in your .env file.');\n                return false;\n            }\n            \n            // Check if we have a GitHub code in the URL (callback from GitHub OAuth)\n            const urlParams = new URLSearchParams(window.location.search);\n            const code = urlParams.get('code');\n            const state = urlParams.get('state');\n            \n            if (code && state) {\n                console.log('Detected GitHub OAuth callback in URL');\n                // Handle the OAuth callback\n                const success = await this.handleCallback(code, state);\n                \n                if (success) {\n                    // Remove the code and state from URL to prevent repeated auth attempts\n                    const newUrl = window.location.pathname;\n                    window.history.replaceState({}, document.title, newUrl);\n                    return true;\n                }\n                return false;\n            }\n            \n            // Check if we have a stored token in localStorage or Supabase\n            const { data: { user } } = await supabase.auth.getUser();\n            if (user) {\n                const { data: profile } = await supabase\n                    .from('profiles')\n                    .select('github_access_token')\n                    .eq('id', user.id)\n                    .single();\n                \n                if (profile?.github_access_token) {\n                    this.accessToken = profile.github_access_token;\n                    await this.fetchUserData();\n                    return true;\n                }\n            }\n            return false;\n        } catch (error) {\n            console.error('Error initializing GitHub service:', error);\n            return false;\n        }\n    }\n\n    /**\n     * Get the OAuth authorization URL\n     */\n    getAuthUrl() {\n        if (!this.isConfigured) {\n            console.error('GitHub integration is not configured. Please set REACT_APP_GITHUB_CLIENT_ID in your .env file.');\n            return '#';\n        }\n        \n        const params = new URLSearchParams({\n            client_id: this.clientId,\n            redirect_uri: this.redirectUri,\n            scope: this.scope,\n            state: this.generateRandomState(),\n        });\n\n        return `https://github.com/login/oauth/authorize?${params.toString()}`;\n    }\n    \n    /**\n     * Get commit activity for a repository\n     */\n    async getCommitActivity(owner, repo) {\n        try {\n            const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/stats/commit_activity`, {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                },\n            });\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch commit activity');\n            }\n            \n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching commit activity:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Get contributor statistics for a repository\n     */\n    async getContributorStats(owner, repo) {\n        try {\n            const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/stats/contributors`, {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                },\n            });\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch contributor stats');\n            }\n            \n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching contributor stats:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Generate a random state string for OAuth security\n     */\n    generateRandomState() {\n        const state = Math.random().toString(36).substring(2, 15);\n        localStorage.setItem('github_oauth_state', state);\n        return state;\n    }\n\n    /**\n     * Handle the OAuth callback\n     */\n    async handleCallback(code, state) {\n        try {\n            // Verify state to prevent CSRF attacks\n            const savedState = localStorage.getItem('github_oauth_state');\n            if (state !== savedState) {\n                throw new Error('Invalid state parameter');\n            }\n\n            // Exchange code for access token using a backend proxy\n            // Always use the server port 5000 regardless of where the frontend is running\n            const hostname = window.location.hostname;\n            const serverUrl = `http://${hostname}:5000`;\n            console.log('Using server URL for GitHub OAuth:', serverUrl);\n            \n            const response = await fetch(`${serverUrl}/api/github/oauth/token`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ code }),\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error('Token exchange response:', errorText);\n                throw new Error('Failed to exchange code for token: ' + errorText);\n            }\n\n            const data = await response.json();\n            this.accessToken = data.access_token;\n\n            // Save token to user profile\n            await this.saveTokenToProfile();\n\n            // Fetch user data\n            await this.fetchUserData();\n\n            return true;\n        } catch (error) {\n            console.error('GitHub OAuth error:', error);\n            return false;\n        } finally {\n            localStorage.removeItem('github_oauth_state');\n        }\n    }\n\n    /**\n     * Save the GitHub access token to the user's profile\n     */\n    async saveTokenToProfile() {\n        try {\n            const { data: { user } } = await supabase.auth.getUser();\n            if (user && this.accessToken) {\n                // First save to profiles table for backward compatibility\n                await supabase\n                    .from('profiles')\n                    .upsert({\n                        id: user.id,\n                        github_access_token: this.accessToken,\n                        updated_at: new Date()\n                    });\n                \n                // Then save to the dedicated github_info table if we have user data\n                if (this.userData) {\n                    const { saveGitHubInfo } = await import('./supabase-service');\n                    await saveGitHubInfo(user.id, {\n                        accessToken: this.accessToken,\n                        username: this.userData.login,\n                        avatarUrl: this.userData.avatar_url,\n                        name: this.userData.name,\n                        email: this.userData.email\n                    });\n                }\n            }\n        } catch (error) {\n            console.error('Error saving GitHub token:', error);\n        }\n    }\n\n    /**\n     * Fetch the user's GitHub data\n     */\n    async fetchUserData() {\n        if (!this.accessToken) return null;\n\n        try {\n            const response = await fetch('https://api.github.com/user', {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch GitHub user data');\n            }\n\n            this.userData = await response.json();\n            return this.userData;\n        } catch (error) {\n            console.error('Error fetching GitHub user data:', error);\n            return null;\n        }\n    }\n\n    /**\n     * Get user repositories\n     */\n    async getRepositories() {\n        if (!this.accessToken) return [];\n\n        try {\n            const response = await fetch('https://api.github.com/user/repos?sort=updated', {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch repositories');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching repositories:', error);\n            return [];\n        }\n    }\n\n    /**\n     * Get repository content\n     */\n    async getRepositoryContent(owner, repo, path = '') {\n        if (!this.accessToken) return null;\n\n        try {\n            const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/contents/${path}`, {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch repository content');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching repository content:', error);\n            return null;\n        }\n    }\n\n    /**\n     * Get file content\n     */\n    async getFileContent(url) {\n        if (!this.accessToken) return null;\n\n        try {\n            const response = await fetch(url, {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                    Accept: 'application/vnd.github.v3.raw',\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch file content');\n            }\n\n            return await response.text();\n        } catch (error) {\n            console.error('Error fetching file content:', error);\n            return null;\n        }\n    }\n\n    /**\n     * Update file content\n     */\n    async updateFile(owner, repo, path, content, message, sha) {\n        if (!this.accessToken) return false;\n\n        try {\n            const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/contents/${path}`, {\n                method: 'PUT',\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    message,\n                    content: btoa(content),\n                    sha,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to update file');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error updating file:', error);\n            return false;\n        }\n    }\n\n    /**\n     * Disconnect GitHub account\n     */\n    async disconnect() {\n        try {\n            this.accessToken = null;\n            this.userData = null;\n\n            const { data: { user } } = await supabase.auth.getUser();\n            if (user) {\n                await supabase\n                    .from('profiles')\n                    .upsert({\n                        id: user.id,\n                        github_access_token: null,\n                        updated_at: new Date()\n                    });\n            }\n\n            return true;\n        } catch (error) {\n            console.error('Error disconnecting GitHub account:', error);\n            return false;\n        }\n    }\n\n    /**\n     * Check if user is connected to GitHub\n     */\n    isConnected() {\n        return !!this.accessToken && !!this.userData;\n    }\n\n    /**\n     * Get user data\n     */\n    getUserData() {\n        return this.userData;\n    }\n\n    /**\n     * Get pull requests for a repository\n     */\n    async getPullRequests(owner, repo) {\n        if (!this.accessToken) return [];\n\n        try {\n            const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=all`, {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch pull requests');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching pull requests:', error);\n            return [];\n        }\n    }\n\n    /**\n     * Get commits for a repository\n     */\n    async getCommits(owner, repo) {\n        if (!this.accessToken) return [];\n\n        try {\n            const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/commits`, {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch commits');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching commits:', error);\n            return [];\n        }\n    }\n\n    /**\n     * Get user's projects\n     */\n    async getProjects() {\n        if (!this.accessToken) return [];\n\n        try {\n            const response = await fetch('https://api.github.com/user/projects', {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                    Accept: 'application/vnd.github.inertia-preview+json' // Projects API requires this preview header\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch projects');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching projects:', error);\n            return [];\n        }\n    }\n\n    /**\n     * Search GitHub repositories\n     * @param {string} query - Search query\n     * @param {Object} options - Search options\n     * @param {string} options.language - Filter by programming language\n     * @param {string} options.sort - Sort by: stars, forks, updated\n     * @param {string} options.order - Order: asc or desc\n     * @param {number} options.per_page - Results per page (max 100)\n     * @param {number} options.page - Page number\n     */\n    async searchRepositories(query, options = {}) {\n        if (!this.accessToken) return { items: [], total_count: 0 };\n\n        try {\n            const params = new URLSearchParams({\n                q: query,\n                sort: options.sort || 'stars',\n                order: options.order || 'desc',\n                per_page: options.per_page || 30,\n                page: options.page || 1\n            });\n\n            if (options.language) {\n                params.append('q', `language:${options.language}`);\n            }\n\n            const response = await fetch(`https://api.github.com/search/repositories?${params.toString()}`, {\n                headers: {\n                    Authorization: `token ${this.accessToken}`,\n                    Accept: 'application/vnd.github.v3+json'\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to search repositories');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error searching repositories:', error);\n            return { items: [], total_count: 0 };\n        }\n    }\n}\n\nexport const githubService = new GitHubService();"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","keys","Object","id","module","exports","ids","all","slice","_ref","roomId","language","initialContent","readOnly","onContentChange","editorRef","useRef","connected","setConnected","useState","users","setUsers","useEffect","current","ydoc","Y","provider","WebsocketProvider","on","event","status","ytext","getText","toString","insert","MonacoBinding","getModel","Set","awareness","setLocalStateField","name","localStorage","getItem","color","Math","floor","random","updateUsers","userList","Array","from","getStates","values","filter","state","user","contentChangeHandler","observe","unobserve","off","disconnect","destroy","_jsxs","className","children","_jsx","index","style","backgroundColor","title","charAt","toUpperCase","Editor","height","defaultValue","onMount","editor","updateOptions","options","minimap","enabled","automaticLayout","repo","stats","setStats","loading","setLoading","error","setError","async","commitActivity","githubService","getCommitActivity","owner","login","contributorStats","getContributorStats","err","console","fetchStats","week","min","total","length","sort","a","b","contributor","src","author","avatar_url","alt","width","GitHubIntegration","useParams","isConnected","setIsConnected","useNavigate","userData","setUserData","repositories","setRepositories","selectedRepo","setSelectedRepo","repoContent","setRepoContent","selectedFile","setSelectedFile","fileContent","setFileContent","setLanguage","notification","setNotification","show","message","type","breadcrumbs","setBreadcrumbs","currentPath","setCurrentPath","collaborativeMode","setCollaborativeMode","showAnalytics","setShowAnalytics","initializeGitHub","isConfigured","showNotification","initialized","initialize","getUserData","loadSpecificRepository","loadRepositories","repos","getRepositories","ownerParam","repoParam","targetRepo","find","r","toLowerCase","path","content","getRepositoryContent","repoError","selectFile","file","extension","split","pop","getFileContent","download_url","handleEditorChange","value","setTimeout","Link","to","_Fragment","onClick","selectRepository","description","stargazers_count","forks_count","breadcrumb","newBreadcrumbs","navigateBreadcrumb","updateFile","sha","CollaborativeCodeEditor","onChange","theme","scrollBeyondLastLine","fontSize","wordWrap","RepoAnalyticsDashboard","localeCompare","item","newPath","push","navigateDirectory","viewBox","fillRule","d","connectGitHub","authUrl","getAuthUrl","log","window","location","href","urlParams","URLSearchParams","search","get","redirectUri","constructor","this","clientId","process","origin","scope","accessToken","handleCallback","newUrl","pathname","history","replaceState","document","data","supabase","auth","getUser","profile","select","eq","single","github_access_token","fetchUserData","client_id","redirect_uri","generateRandomState","response","fetch","headers","Authorization","ok","json","substring","setItem","serverUrl","hostname","method","body","JSON","stringify","errorText","text","access_token","saveTokenToProfile","removeItem","upsert","updated_at","Date","saveGitHubInfo","username","avatarUrl","email","arguments","undefined","url","Accept","btoa","getPullRequests","getCommits","getProjects","searchRepositories","query","items","total_count","params","q","order","per_page","page","append"],"sourceRoot":""}