"use strict";(self.webpackChunkuntitled=self.webpackChunkuntitled||[]).push([[553],{2553:(e,t,s)=>{s.r(t),s.d(t,{default:()=>c});var a=s(65043),r=s(81460),i=s(26462),o=s(62603),n=(s(43132),s(70579));const c=()=>{const[e,t]=(0,a.useState)(!1),[s,c]=(0,a.useState)(!0),[l,h]=(0,a.useState)(null),[d,u]=(0,a.useState)([]),[p,g]=(0,a.useState)([]),[m,j]=(0,a.useState)(""),[x,f]=(0,a.useState)("all"),[v,b]=(0,a.useState)("updated"),[w,N]=(0,a.useState)({show:!1,message:"",type:""}),[y,k]=(0,a.useState)({totalRepos:0,totalStars:0,totalForks:0}),[C,_]=(0,a.useState)("local"),[S,T]=(0,a.useState)([]),[E,H]=(0,a.useState)({language:"",sort:"stars",order:"desc",page:1,per_page:30}),[G,D]=(0,a.useState)(0),$=(0,i.Zp)();(0,a.useEffect)((()=>{A()}),[]),(0,a.useEffect)((()=>{if("global"===C)return;if(0===d.length)return void g([]);let e=[...d];if(m.trim()){const t=m.toLowerCase();e=e.filter((e=>e.name.toLowerCase().includes(t)||e.description&&e.description.toLowerCase().includes(t)))}"sources"===x?e=e.filter((e=>!e.fork)):"forks"===x?e=e.filter((e=>e.fork)):"private"===x?e=e.filter((e=>e.private)):"public"===x&&(e=e.filter((e=>!e.private))),e.sort(((e,t)=>"name"===v?e.name.localeCompare(t.name):"stars"===v?t.stargazers_count-e.stargazers_count:new Date(t.updated_at)-new Date(e.updated_at))),g(e)}),[d,m,x,v,C]);const R=async()=>{if(!m.trim())return T([]),void D(0);try{c(!0);const e=await r.x.searchRepositories(m,E);T(e.items),D(e.total_count)}catch(e){console.error("Error searching GitHub:",e),F("Failed to search GitHub repositories","error")}finally{c(!1)}},A=async()=>{try{if(c(!0),!r.x.isConfigured)return F("GitHub integration is not configured. Please set up your GitHub credentials in the .env file.","error"),void c(!1);const e=await r.x.initialize();if(t(e),e){const e=r.x.getUserData();h(e),await U()}}catch(e){console.error("Error initializing GitHub:",e),F("Failed to initialize GitHub integration","error")}finally{c(!1)}},U=async()=>{try{c(!0);const e=await r.x.getRepositories();u(e);const t=e.reduce(((e,t)=>e+t.stargazers_count),0),s=e.reduce(((e,t)=>e+t.forks_count),0);k({totalRepos:e.length,totalStars:t,totalForks:s})}catch(e){console.error("Error loading repositories:",e),F("Failed to load repositories","error")}finally{c(!1)}},P=e=>{$(`/github/repository/${e.owner.login}/${e.name}`)},F=(e,t)=>{N({show:!0,message:e,type:t}),setTimeout((()=>N({show:!1,message:"",type:""})),3e3)};return s&&!e?(0,n.jsxs)("div",{className:"github-home-loading",children:[(0,n.jsx)("div",{className:"loading-spinner"}),(0,n.jsx)("p",{children:"Loading GitHub integration..."})]}):(0,n.jsxs)("div",{className:"github-home-container",children:[(0,n.jsxs)("div",{className:"github-home-header",children:[(0,n.jsx)("h1",{children:"GitHub Integration"}),(0,n.jsx)("p",{children:"Connect your GitHub account to collaborate on code"}),e&&l&&(0,n.jsxs)("div",{className:"github-user-summary",children:[(0,n.jsx)("img",{src:l.avatar_url,alt:"GitHub Avatar",className:"github-avatar"}),(0,n.jsxs)("div",{children:[(0,n.jsx)("h3",{children:l.name||l.login}),(0,n.jsxs)("p",{children:["@",l.login]}),(0,n.jsxs)("div",{className:"github-stats",children:[(0,n.jsxs)("div",{className:"stat-item",children:[(0,n.jsx)("span",{className:"stat-value",children:y.totalRepos}),(0,n.jsx)("span",{className:"stat-label",children:"Repositories"})]}),(0,n.jsxs)("div",{className:"stat-item",children:[(0,n.jsx)("span",{className:"stat-value",children:y.totalStars}),(0,n.jsx)("span",{className:"stat-label",children:"Total Stars"})]}),(0,n.jsxs)("div",{className:"stat-item",children:[(0,n.jsx)("span",{className:"stat-value",children:y.totalForks}),(0,n.jsx)("span",{className:"stat-label",children:"Total Forks"})]})]})]})]})]}),e?(0,n.jsxs)("div",{className:"github-connected-content",children:[(0,n.jsxs)("div",{className:"github-toolbar",children:[(0,n.jsx)("div",{className:"search-and-filter",children:(0,n.jsxs)("div",{className:"search-container",children:[(0,n.jsxs)("div",{className:"search-mode-toggle",children:[(0,n.jsx)("button",{className:"mode-button "+("local"===C?"active":""),onClick:()=>_("local"),children:"My Repositories"}),(0,n.jsx)("button",{className:"mode-button "+("global"===C?"active":""),onClick:()=>_("global"),children:"Search GitHub"})]}),(0,n.jsxs)("div",{className:"search-box",children:[(0,n.jsx)("input",{type:"text",placeholder:"local"===C?"Search your repositories...":"Search all GitHub repositories...",value:m,onChange:e=>j(e.target.value),onKeyPress:e=>{"Enter"===e.key&&"global"===C&&R()}}),"global"===C&&(0,n.jsx)("button",{onClick:R,className:"search-button",children:"Search"})]}),"global"===C&&(0,n.jsxs)("div",{className:"search-options",children:[(0,n.jsxs)("select",{value:E.language,onChange:e=>H({...E,language:e.target.value}),children:[(0,n.jsx)("option",{value:"",children:"All Languages"}),(0,n.jsx)("option",{value:"javascript",children:"JavaScript"}),(0,n.jsx)("option",{value:"python",children:"Python"}),(0,n.jsx)("option",{value:"java",children:"Java"}),(0,n.jsx)("option",{value:"typescript",children:"TypeScript"}),(0,n.jsx)("option",{value:"cpp",children:"C++"}),(0,n.jsx)("option",{value:"csharp",children:"C#"}),(0,n.jsx)("option",{value:"php",children:"PHP"}),(0,n.jsx)("option",{value:"ruby",children:"Ruby"}),(0,n.jsx)("option",{value:"go",children:"Go"}),(0,n.jsx)("option",{value:"rust",children:"Rust"})]}),(0,n.jsxs)("select",{value:E.sort,onChange:e=>H({...E,sort:e.target.value}),children:[(0,n.jsx)("option",{value:"stars",children:"Stars"}),(0,n.jsx)("option",{value:"forks",children:"Forks"}),(0,n.jsx)("option",{value:"updated",children:"Updated"})]}),(0,n.jsxs)("select",{value:E.order,onChange:e=>H({...E,order:e.target.value}),children:[(0,n.jsx)("option",{value:"desc",children:"Descending"}),(0,n.jsx)("option",{value:"asc",children:"Ascending"})]})]}),"local"===C&&(0,n.jsxs)("div",{className:"filter-container",children:[(0,n.jsxs)("select",{value:x,onChange:e=>f(e.target.value),className:"repo-filter-select",children:[(0,n.jsx)("option",{value:"all",children:"All Repositories"}),(0,n.jsx)("option",{value:"sources",children:"Sources"}),(0,n.jsx)("option",{value:"forks",children:"Forks"}),(0,n.jsx)("option",{value:"private",children:"Private"}),(0,n.jsx)("option",{value:"public",children:"Public"})]}),(0,n.jsxs)("select",{value:v,onChange:e=>b(e.target.value),className:"repo-sort-select",children:[(0,n.jsx)("option",{value:"updated",children:"Last Updated"}),(0,n.jsx)("option",{value:"name",children:"Name"}),(0,n.jsx)("option",{value:"stars",children:"Stars"})]})]})]})}),(0,n.jsx)("button",{className:"github-disconnect-button",onClick:async()=>{try{await r.x.disconnect(),t(!1),h(null),u([]),g([]),F("GitHub account disconnected successfully","success")}catch(e){F("Failed to disconnect GitHub account","error")}},children:"Disconnect from GitHub"})]}),(0,n.jsx)("div",{className:"repositories-container",children:"global"===C?S.length>0?S.map((e=>(0,n.jsxs)("div",{className:"repository-card",onClick:()=>P(e),children:[(0,n.jsxs)("div",{className:"repo-card-header",children:[(0,n.jsx)("div",{className:"repo-icon",children:e.fork?"\ud83c\udf74":"\ud83d\udcc1"}),(0,n.jsx)("h3",{className:"repo-name",children:e.name}),e.private&&(0,n.jsx)("span",{className:"repo-private-badge",children:"Private"})]}),(0,n.jsx)("p",{className:"repo-description",children:e.description||"No description provided"}),(0,n.jsxs)("div",{className:"repo-card-footer",children:[e.language&&(0,n.jsxs)("div",{className:"repo-language",children:[(0,n.jsx)("span",{className:`language-color ${e.language.toLowerCase()}`}),e.language]}),(0,n.jsxs)("div",{className:"repo-stats",children:[(0,n.jsxs)("span",{className:"repo-stat",children:[(0,n.jsx)("span",{className:"repo-stat-icon",children:"\u2b50"}),e.stargazers_count]}),(0,n.jsxs)("span",{className:"repo-stat",children:[(0,n.jsx)("span",{className:"repo-stat-icon",children:"\ud83c\udf74"}),e.forks_count]}),(0,n.jsxs)("span",{className:"repo-stat",children:[(0,n.jsx)("span",{className:"repo-stat-icon",children:"\ud83d\udcc5"}),new Date(e.updated_at).toLocaleDateString()]})]})]})]},e.id))):m?(0,n.jsx)("div",{className:"no-results-message",children:"No repositories found matching your search"}):null:p.length>0?p.map((e=>(0,n.jsxs)("div",{className:"repository-card",onClick:()=>P(e),children:[(0,n.jsxs)("div",{className:"repo-card-header",children:[(0,n.jsx)("div",{className:"repo-icon",children:e.fork?"\ud83c\udf74":"\ud83d\udcc1"}),(0,n.jsx)("h3",{className:"repo-name",children:e.name}),e.private&&(0,n.jsx)("span",{className:"repo-private-badge",children:"Private"})]}),(0,n.jsx)("p",{className:"repo-description",children:e.description||"No description provided"}),(0,n.jsxs)("div",{className:"repo-card-footer",children:[e.language&&(0,n.jsxs)("div",{className:"repo-language",children:[(0,n.jsx)("span",{className:`language-color ${e.language.toLowerCase()}`}),e.language]}),(0,n.jsxs)("div",{className:"repo-stats",children:[(0,n.jsxs)("span",{className:"repo-stat",children:[(0,n.jsx)("span",{className:"repo-stat-icon",children:"\u2b50"}),e.stargazers_count]}),(0,n.jsxs)("span",{className:"repo-stat",children:[(0,n.jsx)("span",{className:"repo-stat-icon",children:"\ud83c\udf74"}),e.forks_count]}),(0,n.jsxs)("span",{className:"repo-stat",children:[(0,n.jsx)("span",{className:"repo-stat-icon",children:"\ud83d\udcc5"}),new Date(e.updated_at).toLocaleDateString()]})]})]})]},e.id))):d.length>0?(0,n.jsx)("div",{className:"no-results-message",children:"No repositories match your filters"}):(0,n.jsx)("div",{className:"no-repos-message",children:"No repositories found"})}),"global"===C&&G>E.per_page&&(0,n.jsxs)("div",{className:"pagination",children:[(0,n.jsx)("button",{onClick:()=>H({...E,page:E.page-1}),disabled:1===E.page,children:"Previous"}),(0,n.jsxs)("span",{children:["Page ",E.page]}),(0,n.jsx)("button",{onClick:()=>H({...E,page:E.page+1}),disabled:S.length<E.per_page,children:"Next"})]})]}):(0,n.jsxs)("div",{className:"github-connect-section",children:[(0,n.jsxs)("div",{className:"github-connect-card",children:[(0,n.jsx)("div",{className:"github-logo",children:(0,n.jsx)("svg",{height:"68",viewBox:"0 0 16 16",width:"68",children:(0,n.jsx)("path",{fillRule:"evenodd",d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"})})}),(0,n.jsx)("h3",{children:"Connect to GitHub"}),(0,n.jsx)("p",{children:"Link your GitHub account to access your repositories and collaborate on code directly from ECHOLINK."}),(0,n.jsx)("button",{className:"github-connect-button",onClick:()=>{try{const e=r.x.getAuthUrl();console.log("Redirecting to GitHub auth URL:",e),window.location.href=e}catch(e){console.error("Error initiating GitHub connection:",e),F("Failed to connect to GitHub: "+e.message,"error")}},children:"Connect GitHub Account"}),(0,n.jsx)("button",{className:"github-debug-button",onClick:async()=>{try{c(!0),F("Running GitHub connection diagnostics...","info");const e=new URLSearchParams(window.location.search),t=e.get("code"),s=e.get("state");console.log("GitHub Integration Debug:"),console.log("- URL has code param:",!!t),console.log("- URL has state param:",!!s),console.log("- GitHub service configured:",r.x.isConfigured),console.log("- Client ID available:",!0),console.log("- Redirect URI:",r.x.redirectUri);const a=await r.x.initialize();console.log("- Service initialized:",a),F("Diagnostic data logged to console","info")}catch(e){console.error("Debug error:",e),F("Error during diagnostics: "+e.message,"error")}finally{c(!1)}},children:"Diagnose Connection Issues"})]}),(0,n.jsx)(o.A,{})]}),w.show&&(0,n.jsx)("div",{className:`github-notification ${w.type}`,children:w.message})]})}},43132:()=>{},62603:(e,t,s)=>{s.d(t,{A:()=>r});s(65043);var a=s(70579);const r=()=>(0,a.jsxs)("div",{className:"github-features",children:[(0,a.jsxs)("div",{className:"feature-card",children:[(0,a.jsx)("div",{className:"feature-icon",children:"\ud83d\udcc1"}),(0,a.jsx)("h4",{children:"Repository Access"}),(0,a.jsx)("p",{children:"Browse and search all your GitHub repositories directly from ECHOLINK"})]}),(0,a.jsxs)("div",{className:"feature-card",children:[(0,a.jsx)("div",{className:"feature-icon",children:"\ud83d\udcbb"}),(0,a.jsx)("h4",{children:"Code Viewing & Editing"}),(0,a.jsx)("p",{children:"View and edit code files with syntax highlighting and automatic saving"})]}),(0,a.jsxs)("div",{className:"feature-card",children:[(0,a.jsx)("div",{className:"feature-icon",children:"\ud83d\udc65"}),(0,a.jsx)("h4",{children:"Collaborative Editing"}),(0,a.jsx)("p",{children:"Edit code files together in real-time with your connected peers"})]}),(0,a.jsxs)("div",{className:"feature-card",children:[(0,a.jsx)("div",{className:"feature-icon",children:"\ud83d\udcca"}),(0,a.jsx)("h4",{children:"Repository Analytics"}),(0,a.jsx)("p",{children:"See detailed analytics about your repositories including commit activity"})]}),(0,a.jsxs)("div",{className:"feature-card",children:[(0,a.jsx)("div",{className:"feature-icon",children:"\ud83d\udd04"}),(0,a.jsx)("h4",{children:"Commit Changes"}),(0,a.jsx)("p",{children:"Make changes to your code and commit them directly to GitHub"})]}),(0,a.jsxs)("div",{className:"feature-card",children:[(0,a.jsx)("div",{className:"feature-icon",children:"\ud83d\udd0d"}),(0,a.jsx)("h4",{children:"Search & Filter"}),(0,a.jsx)("p",{children:"Find repositories and files quickly with powerful search capabilities"})]})]})},81460:(e,t,s)=>{s.d(t,{x:()=>r});var a=s(58900);const r=new class{constructor(){this.clientId="Ov23liEUbi2KvL5wafTt",this.redirectUri=`${window.location.origin}/dashboard`,console.log("GitHub redirect URI:",this.redirectUri),this.scope="repo user",this.accessToken=null,this.userData=null,this.isConfigured=!!this.clientId}async initialize(){try{if(!this.isConfigured)return console.error("GitHub integration is not configured. Please set REACT_APP_GITHUB_CLIENT_ID in your .env file."),!1;const e=new URLSearchParams(window.location.search),t=e.get("code"),s=e.get("state");if(t&&s){console.log("Detected GitHub OAuth callback in URL");if(await this.handleCallback(t,s)){const e=window.location.pathname;return window.history.replaceState({},document.title,e),!0}return!1}const{data:{user:r}}=await a.ND.auth.getUser();if(r){const{data:e}=await a.ND.from("profiles").select("github_access_token").eq("id",r.id).single();if(null!==e&&void 0!==e&&e.github_access_token)return this.accessToken=e.github_access_token,await this.fetchUserData(),!0}return!1}catch(e){return console.error("Error initializing GitHub service:",e),!1}}getAuthUrl(){if(!this.isConfigured)return console.error("GitHub integration is not configured. Please set REACT_APP_GITHUB_CLIENT_ID in your .env file."),"#";return`https://github.com/login/oauth/authorize?${new URLSearchParams({client_id:this.clientId,redirect_uri:this.redirectUri,scope:this.scope,state:this.generateRandomState()}).toString()}`}async getCommitActivity(e,t){try{const s=await fetch(`https://api.github.com/repos/${e}/${t}/stats/commit_activity`,{headers:{Authorization:`token ${this.accessToken}`}});if(!s.ok)throw new Error("Failed to fetch commit activity");return await s.json()}catch(s){throw console.error("Error fetching commit activity:",s),s}}async getContributorStats(e,t){try{const s=await fetch(`https://api.github.com/repos/${e}/${t}/stats/contributors`,{headers:{Authorization:`token ${this.accessToken}`}});if(!s.ok)throw new Error("Failed to fetch contributor stats");return await s.json()}catch(s){throw console.error("Error fetching contributor stats:",s),s}}generateRandomState(){const e=Math.random().toString(36).substring(2,15);return localStorage.setItem("github_oauth_state",e),e}async handleCallback(e,t){try{if(t!==localStorage.getItem("github_oauth_state"))throw new Error("Invalid state parameter");const s=`http://${window.location.hostname}:5000`;console.log("Using server URL for GitHub OAuth:",s);const a=await fetch(`${s}/api/github/oauth/token`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:e})});if(!a.ok){const e=await a.text();throw console.error("Token exchange response:",e),new Error("Failed to exchange code for token: "+e)}const r=await a.json();return this.accessToken=r.access_token,await this.saveTokenToProfile(),await this.fetchUserData(),!0}catch(s){return console.error("GitHub OAuth error:",s),!1}finally{localStorage.removeItem("github_oauth_state")}}async saveTokenToProfile(){try{const{data:{user:e}}=await a.ND.auth.getUser();if(e&&this.accessToken&&(await a.ND.from("profiles").upsert({id:e.id,github_access_token:this.accessToken,updated_at:new Date}),this.userData)){const{saveGitHubInfo:t}=await Promise.resolve().then(s.bind(s,58900));await t(e.id,{accessToken:this.accessToken,username:this.userData.login,avatarUrl:this.userData.avatar_url,name:this.userData.name,email:this.userData.email})}}catch(e){console.error("Error saving GitHub token:",e)}}async fetchUserData(){if(!this.accessToken)return null;try{const e=await fetch("https://api.github.com/user",{headers:{Authorization:`token ${this.accessToken}`}});if(!e.ok)throw new Error("Failed to fetch GitHub user data");return this.userData=await e.json(),this.userData}catch(e){return console.error("Error fetching GitHub user data:",e),null}}async getRepositories(){if(!this.accessToken)return[];try{const e=await fetch("https://api.github.com/user/repos?sort=updated",{headers:{Authorization:`token ${this.accessToken}`}});if(!e.ok)throw new Error("Failed to fetch repositories");return await e.json()}catch(e){return console.error("Error fetching repositories:",e),[]}}async getRepositoryContent(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if(!this.accessToken)return null;try{const a=await fetch(`https://api.github.com/repos/${e}/${t}/contents/${s}`,{headers:{Authorization:`token ${this.accessToken}`}});if(!a.ok)throw new Error("Failed to fetch repository content");return await a.json()}catch(a){return console.error("Error fetching repository content:",a),null}}async getFileContent(e){if(!this.accessToken)return null;try{const t=await fetch(e,{headers:{Authorization:`token ${this.accessToken}`,Accept:"application/vnd.github.v3.raw"}});if(!t.ok)throw new Error("Failed to fetch file content");return await t.text()}catch(t){return console.error("Error fetching file content:",t),null}}async updateFile(e,t,s,a,r,i){if(!this.accessToken)return!1;try{const o=await fetch(`https://api.github.com/repos/${e}/${t}/contents/${s}`,{method:"PUT",headers:{Authorization:`token ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({message:r,content:btoa(a),sha:i})});if(!o.ok)throw new Error("Failed to update file");return await o.json()}catch(o){return console.error("Error updating file:",o),!1}}async disconnect(){try{this.accessToken=null,this.userData=null;const{data:{user:e}}=await a.ND.auth.getUser();return e&&await a.ND.from("profiles").upsert({id:e.id,github_access_token:null,updated_at:new Date}),!0}catch(e){return console.error("Error disconnecting GitHub account:",e),!1}}isConnected(){return!!this.accessToken&&!!this.userData}getUserData(){return this.userData}async getPullRequests(e,t){if(!this.accessToken)return[];try{const s=await fetch(`https://api.github.com/repos/${e}/${t}/pulls?state=all`,{headers:{Authorization:`token ${this.accessToken}`}});if(!s.ok)throw new Error("Failed to fetch pull requests");return await s.json()}catch(s){return console.error("Error fetching pull requests:",s),[]}}async getCommits(e,t){if(!this.accessToken)return[];try{const s=await fetch(`https://api.github.com/repos/${e}/${t}/commits`,{headers:{Authorization:`token ${this.accessToken}`}});if(!s.ok)throw new Error("Failed to fetch commits");return await s.json()}catch(s){return console.error("Error fetching commits:",s),[]}}async getProjects(){if(!this.accessToken)return[];try{const e=await fetch("https://api.github.com/user/projects",{headers:{Authorization:`token ${this.accessToken}`,Accept:"application/vnd.github.inertia-preview+json"}});if(!e.ok)throw new Error("Failed to fetch projects");return await e.json()}catch(e){return console.error("Error fetching projects:",e),[]}}async searchRepositories(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.accessToken)return{items:[],total_count:0};try{const s=new URLSearchParams({q:e,sort:t.sort||"stars",order:t.order||"desc",per_page:t.per_page||30,page:t.page||1});t.language&&s.append("q",`language:${t.language}`);const a=await fetch(`https://api.github.com/search/repositories?${s.toString()}`,{headers:{Authorization:`token ${this.accessToken}`,Accept:"application/vnd.github.v3+json"}});if(!a.ok)throw new Error("Failed to search repositories");return await a.json()}catch(s){return console.error("Error searching repositories:",s),{items:[],total_count:0}}}}}}]);
//# sourceMappingURL=553.24214520.chunk.js.map