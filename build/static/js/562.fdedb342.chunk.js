"use strict";(self.webpackChunkuntitled=self.webpackChunkuntitled||[]).push([[562],{85562:(e,a,s)=>{s.r(a),s.d(a,{default:()=>o});var l=s(65043),t=s(61677),i=s(58900),n=s(70579);const o=e=>{let{onClose:a,addNotification:s,currentUser:o}=e;const[r,c]=(0,l.useState)("openai"),[d,m]=(0,l.useState)(""),[u,p]=(0,l.useState)(""),[g,h]=(0,l.useState)([]),[v,x]=(0,l.useState)(.7),[j,f]=(0,l.useState)(2048),[y,N]=(0,l.useState)(!1),[b,S]=(0,l.useState)("");(0,l.useEffect)((()=>{const e=localStorage.getItem(`${r}_api_key`);e&&m(e)}),[r]);const k=[{id:"openai",name:"OpenAI",models:["gpt-4-1106-preview","gpt-4","gpt-4-32k","gpt-3.5-turbo-1106","gpt-3.5-turbo","gpt-3.5-turbo-16k","text-davinci-003","text-davinci-002"]},{id:"gemini",name:"Google Gemini",models:["gemini-pro","gemini-pro-vision","gemini-ultra"]},{id:"ollama",name:"Ollama (Local)",models:[]}];(0,l.useEffect)((()=>{(async()=>{if("ollama"===r)await C();else{const e=k.find((e=>e.id===r)),a=e?e.models:[];h(a),a.length>0&&p(a[0])}})()}),[r]);const C=async()=>{try{const e=await fetch("http://localhost:11434/api/tags");if(!e.ok)throw new Error("Failed to fetch Ollama models");const a=(await e.json()).models||[];h(a.map((e=>e.name)))}catch(b){S("Could not connect to Ollama. Make sure it's running locally."),h([])}};return(0,n.jsxs)("div",{className:"ai-settings-container",children:[(0,n.jsxs)("div",{className:"ai-settings-header",children:[(0,n.jsx)("h2",{children:"AI Provider Settings"}),(0,n.jsx)("button",{className:"close-button",onClick:a,children:"\xd7"})]}),(0,n.jsxs)("form",{onSubmit:async e=>{e.preventDefault(),N(!0),S("");try{if(await t.A.initialize("ollama"===r?"ollama":d),u&&t.A.setModel(u),"ollama"!==r&&d&&localStorage.setItem(`${r}_api_key`,d),null!==o&&void 0!==o&&o.id){const e={provider:r,apiKey:"ollama"===r?"ollama":d,model:u,temperature:v,maxTokens:j};await(0,i.tz)(o.id,e)}s("AI settings updated successfully","success"),a()}catch(b){S(b.message)}finally{N(!1)}},className:"ai-settings-form",children:[(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{children:"Select Provider:"}),(0,n.jsx)("select",{value:r,onChange:e=>{const a=e.target.value;c(a);const s=localStorage.getItem(`${a}_api_key`);m(s||""),p(""),S("")},className:"provider-select",children:k.map((e=>(0,n.jsx)("option",{value:e.id,children:e.name},e.id)))})]}),"ollama"!==r&&(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{children:"API Key:"}),(0,n.jsx)("input",{type:"password",value:d,onChange:e=>m(e.target.value),placeholder:`Enter your ${"openai"===r?"OpenAI":"Google"} API key`,className:"api-key-input",required:!0})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{children:"Select Model:"}),"ollama"===r&&0===g.length?(0,n.jsx)("div",{className:"no-models-message",children:"No models found locally. Please install Ollama models first."}):(0,n.jsxs)("select",{value:u,onChange:e=>p(e.target.value),className:"model-select",required:!0,children:[(0,n.jsx)("option",{value:"",children:"Choose a model"}),g.map((e=>(0,n.jsx)("option",{value:e,children:e},e)))]})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsxs)("label",{children:["Temperature: ",v]}),(0,n.jsx)("input",{type:"range",min:"0",max:"1",step:"0.1",value:v,onChange:e=>x(parseFloat(e.target.value)),className:"slider"}),(0,n.jsxs)("div",{className:"slider-labels",children:[(0,n.jsx)("span",{children:"More Precise"}),(0,n.jsx)("span",{children:"More Creative"})]})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsxs)("label",{children:["Max Tokens: ",j]}),(0,n.jsx)("input",{type:"range",min:"256",max:"8192",step:"256",value:j,onChange:e=>f(parseInt(e.target.value)),className:"slider"})]}),b&&(0,n.jsx)("div",{className:"error-message",children:b}),(0,n.jsx)("button",{type:"submit",className:"save-button",disabled:y||!d&&"ollama"!==r||!u,children:y?"Connecting...":"Save Settings"})]})]})}}}]);
//# sourceMappingURL=562.fdedb342.chunk.js.map