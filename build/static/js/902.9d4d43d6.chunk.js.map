{"version":3,"file":"static/js/902.9d4d43d6.chunk.js","mappings":"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","sources":["components/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { saveUserProfile, getUserProfile } from '../services/supabase-service';\r\nimport './Profile.css';\r\n\r\nconst Profile = ({ currentUser, onClose, onProfileUpdate }) => {\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [avatarUrl, setAvatarUrl] = useState('');\r\n    const [customAvatar, setCustomAvatar] = useState(null);\r\n    const [previewUrl, setPreviewUrl] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const loadProfile = async () => {\r\n            // Try to load profile from Supabase first\r\n            if (currentUser?.id) {\r\n                const { profile } = await getUserProfile(currentUser.id);\r\n                if (profile) {\r\n                    setDisplayName(profile.displayName || '');\r\n                    setAvatarUrl(profile.avatarUrl || '');\r\n                    setPreviewUrl(profile.avatarUrl || '');\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            // Fall back to localStorage if Supabase data not available\r\n            const savedProfile = JSON.parse(localStorage.getItem('user_profile')) || {};\r\n            if (savedProfile.displayName) {\r\n                setDisplayName(savedProfile.displayName);\r\n            } else {\r\n                // Set default display name based on user ID\r\n                setDisplayName(`User-${currentUser?.id?.substring(0, 6)}`);\r\n            }\r\n            if (savedProfile.avatarUrl) {\r\n                setAvatarUrl(savedProfile.avatarUrl);\r\n                setPreviewUrl(savedProfile.avatarUrl);\r\n            }\r\n        };\r\n        \r\n        loadProfile();\r\n    }, [currentUser]);\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        if (file.type.startsWith('image/')) {\r\n            setCustomAvatar(file);\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                setPreviewUrl(e.target.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        } else {\r\n            alert('Please select an image file');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const profileData = {\r\n                displayName: displayName.trim() || `User-${currentUser?.id?.substring(0, 6)}`,\r\n                avatarUrl: previewUrl || ''\r\n            };\r\n            \r\n            // Save to localStorage as fallback\r\n            localStorage.setItem('user_profile', JSON.stringify(profileData));\r\n            \r\n            // Save to Supabase if user is logged in\r\n            if (currentUser?.id) {\r\n                await saveUserProfile(currentUser.id, profileData);\r\n            }\r\n            \r\n            // Notify parent component about the update\r\n            if (onProfileUpdate) {\r\n                onProfileUpdate(profileData);\r\n            }\r\n            \r\n            onClose();\r\n        } catch (error) {\r\n            console.error('Failed to save profile:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const avatarOptions = [\r\n        '👤', '👩', '👨', '👧', '👦', '👵', '👴', '👱‍♀️', '👱', '👸', \r\n        '🤴', '👰', '🤵', '👼', '🙍‍♀️', '🙍', '🙎‍♀️', '🙎', '🙅‍♀️', '🙅'\r\n    ];\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <div className=\"profile-header\">\r\n                <h2>Edit Your Profile</h2>\r\n                <button className=\"close-button\" onClick={onClose}>×</button>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"profile-form\">\r\n                <div className=\"avatar-preview\">\r\n                    {previewUrl ? (\r\n                        <img src={previewUrl} alt=\"Profile Preview\" className=\"avatar-image\" />\r\n                    ) : (\r\n                        <div className=\"avatar-placeholder\">\r\n                            {displayName ? displayName.charAt(0).toUpperCase() : '👤'}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Display Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={displayName}\r\n                        onChange={(e) => setDisplayName(e.target.value)}\r\n                        placeholder=\"Enter your display name\"\r\n                        className=\"display-name-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Upload Profile Picture:</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleFileChange}\r\n                        className=\"file-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Or Choose an Avatar:</label>\r\n                    <div className=\"avatar-options\">\r\n                        {avatarOptions.map((avatar, index) => (\r\n                            <button\r\n                                key={index}\r\n                                type=\"button\"\r\n                                className={`avatar-option ${!previewUrl && avatar === avatarUrl ? 'selected' : ''}`}\r\n                                onClick={() => {\r\n                                    setAvatarUrl(avatar);\r\n                                    setPreviewUrl('');\r\n                                    setCustomAvatar(null);\r\n                                }}\r\n                            >\r\n                                {avatar}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"save-button\" \r\n                    disabled={isLoading}\r\n                >\r\n                    {isLoading ? 'Saving...' : 'Save Profile'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;"],"names":["_ref","currentUser","onClose","onProfileUpdate","displayName","setDisplayName","useState","avatarUrl","setAvatarUrl","customAvatar","setCustomAvatar","previewUrl","setPreviewUrl","isLoading","setIsLoading","useEffect","async","id","profile","getUserProfile","savedProfile","JSON","parse","localStorage","getItem","_currentUser$id","substring","loadProfile","_jsxs","className","children","_jsx","onClick","onSubmit","e","preventDefault","_currentUser$id2","profileData","trim","setItem","stringify","saveUserProfile","error","console","src","alt","charAt","toUpperCase","type","value","onChange","target","placeholder","accept","file","files","startsWith","reader","FileReader","onload","result","readAsDataURL","alert","map","avatar","index","disabled"],"sourceRoot":""}